++++++++++++++++++++++

- 기본적으로 HTTP 프로토콜 환경은 "connectionless, stateless"한 특성을 가지기 때문에 서버는 클라이언트가 누구인지 매번 확인해야한다.
- Connectionless : 클라이언트가 요청을 한 후 응답을 받으면 그 연결을 끊어 버리는 특징.
- Stateless : 통신이 끝나면 상태를 유지하지 않는 특징.

- 위 두가지의 문제점을 해결해주기 위해 쿠키와 세션을 사용한다.

- 쿠키란 클라이언트(브라우저) 로컬에 저장되는 키와 값이 들어있는 작은 데이터 파일이다.
- 사용자 인증이 유효한 시간을 명시할 수 있으며, 유효 시간이 정해지면 브라우저가 종료되어도 인증이 유지된다는 특징이 있다.
- 사용자가 따로 요청하지 않아도 브라우저가 Request시에 Request Header를 넣어서 자동으로 서버에 전송한다.

- 사용자 정보 파일을 브라우저에 저장하는 쿠키와 달리 세션은 서버 측에서 관리한다.
- 세션도 쿠키처럼 만료시간을 정할 수 있지만 브라우저가 종료되어도 유지되는 쿠키에 비해 세션은 브라우저 종료 시 만료시간과 관계없이 바로 삭제된다.
- 사용자에 대한 정보를 서버에 두기 때문에 쿠키보다 보안에 좋지만, 사용자가 많아질수록 서버 메모리를 많이 차지하게 되는 단점이 있다.
- 즉 동접자 수가 많은 웹 사이트인 경우 서버에 과부하를 주게 되는 경우가 많이 발생한다.

++++++++++++++++++++++

- 세션이 쿠키를 사용하기 때문에 결국 쿠키와 세션은 서로 비슷하다고 할 수 있다.
- 다만 사용자의 정보가 저장되는 위치가 서로 다르기때문에 이러한 점이 쿠키와 세션의 가장 큰 차이점이라고 할 수 있다.
- 세션은 사용자의 정보가 서버에 저장되어 보안면에서는 조금 더 우수하지만, 요청 속도는 쿠키가 세션보다 더 빠르기 때문에 서로 다른 장단점을 가지고 있다.

++++++++++++++++++++++
